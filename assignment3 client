#include <stdio.h>
#include <stdlib.h>
#include <arpa/inet.h>
#include <netinet/in.h>
#include <string.h>
#include <sys/socket.h>
#include <unistd.h>

#define MAX_RESPONSE_SIZE 4096

int main(int argc, char *argv[]) {
    if (argc != 3) {
        fprintf(stderr, "Usage: %s <Server IP> <Server Port>\n", argv[0]);
        exit(1);
    }

    int sockfd;
    struct sockaddr_in servaddr;

    sockfd = socket(AF_INET, SOCK_STREAM, 0);

    bzero(&servaddr, sizeof(servaddr));
    servaddr.sin_family = AF_INET;
    servaddr.sin_port = htons(atoi(argv[2])); // Port from command line argument
    inet_pton(AF_INET, argv[1], &servaddr.sin_addr);

    // Connect to the server
    if (connect(sockfd, (struct sockaddr *)&servaddr, sizeof(servaddr)) < 0) {
        perror("connect error");
        exit(1);
    }

    char password[100];

    while (1) {
        printf("Enter your password (or 'done' to exit): ");
        scanf("%s", password);

        // Send the password to the server
        write(sockfd, password, sizeof(password));

        if (strcmp(password, "done") == 0) {
            close(sockfd);
            break;
        }

        char response[MAX_RESPONSE_SIZE];
        int bytesRead = read(sockfd, response, sizeof(response) - 1);

        if (bytesRead <= 0) {
            printf("Server connection closed.\n");
            break;
        }

        response[bytesRead] = '\0';

        // Display the server's response
        printf("Server Response: %s\n", response);
    }

    return 0;
}
